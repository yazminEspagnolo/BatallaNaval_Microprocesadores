
GccMatrixWS2812 V3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000008b0  00000944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000275  00800122  00800122  00000966  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000966  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000998  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  000009d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c2b  00000000  00000000  00000bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb1  00000000  00000000  0000281b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000022d8  00000000  00000000  000036cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003cc  00000000  00000000  000059a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011c13  00000000  00000000  00005d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006fd  00000000  00000000  00017983  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00018080  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00008b87  00000000  00000000  000181c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	e6 c1       	rjmp	.+972    	; 0x406 <__vector_14>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	96 c2       	rjmp	.+1324   	; 0x576 <__vector_18>
  4a:	00 00       	nop
  4c:	7b c2       	rjmp	.+1270   	; 0x544 <__vector_19>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	23 e0       	ldi	r18, 0x03	; 3
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 39       	cpi	r26, 0x97	; 151
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	f4 d2       	rcall	.+1512   	; 0x684 <main>
  9c:	07 c4       	rjmp	.+2062   	; 0x8ac <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <ss_Init>:
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	40 e9       	ldi	r20, 0x90	; 144
  a6:	5a b1       	in	r21, 0x0a	; 10
  a8:	54 2b       	or	r21, r20
  aa:	5a b9       	out	0x0a, r21	; 10
  ac:	41 e0       	ldi	r20, 0x01	; 1
  ae:	54 b1       	in	r21, 0x04	; 4
  b0:	54 2b       	or	r21, r20
  b2:	54 b9       	out	0x04, r21	; 4
  b4:	5f 91       	pop	r21
  b6:	4f 91       	pop	r20
  b8:	08 95       	ret

000000ba <ss_SendByte>:
  ba:	4f 93       	push	r20
  bc:	5f 93       	push	r21
  be:	5f b7       	in	r21, 0x3f	; 63
  c0:	98 94       	clz
  c2:	88 94       	clc
  c4:	48 e0       	ldi	r20, 0x08	; 8

000000c6 <nxtbit>:
  c6:	87 95       	ror	r24
  c8:	10 f0       	brcs	.+4      	; 0xce <setted>
  ca:	28 98       	cbi	0x05, 0	; 5
  cc:	01 c0       	rjmp	.+2      	; 0xd0 <shft>

000000ce <setted>:
  ce:	28 9a       	sbi	0x05, 0	; 5

000000d0 <shft>:
  d0:	5f 9a       	sbi	0x0b, 7	; 11
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	5f 98       	cbi	0x0b, 7	; 11
  d8:	4a 95       	dec	r20
  da:	09 f0       	breq	.+2      	; 0xde <allbitsended>
  dc:	f4 cf       	rjmp	.-24     	; 0xc6 <nxtbit>

000000de <allbitsended>:
  de:	5f bf       	out	0x3f, r21	; 63
  e0:	5f 91       	pop	r21
  e2:	4f 91       	pop	r20
  e4:	08 95       	ret

000000e6 <ss_Wrt2Latch>:
  e6:	5c 9a       	sbi	0x0b, 4	; 11
  e8:	00 00       	nop
  ea:	00 00       	nop
  ec:	5c 98       	cbi	0x0b, 4	; 11
  ee:	08 95       	ret

000000f0 <joybutton_Init>:
  f0:	4f 93       	push	r20
  f2:	5f 93       	push	r21
  f4:	40 e1       	ldi	r20, 0x10	; 16
  f6:	5a b5       	in	r21, 0x2a	; 42
  f8:	54 2b       	or	r21, r20
  fa:	5a bd       	out	0x2a, r21	; 42
  fc:	5f 91       	pop	r21
  fe:	4f 91       	pop	r20
 100:	08 95       	ret

00000102 <init_ws2812>:
 102:	7f 93       	push	r23
 104:	74 b1       	in	r23, 0x04	; 4
 106:	72 60       	ori	r23, 0x02	; 2
 108:	74 b9       	out	0x04, r23	; 4
 10a:	75 b1       	in	r23, 0x05	; 5
 10c:	7d 7f       	andi	r23, 0xFD	; 253
 10e:	75 b9       	out	0x05, r23	; 5
 110:	3d d0       	rcall	.+122    	; 0x18c <delay>
 112:	7f 91       	pop	r23
 114:	08 95       	ret

00000116 <wrt_ws2812>:
 116:	f8 94       	cli
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	4f 93       	push	r20

0000011e <donext>:
 11e:	70 e4       	ldi	r23, 0x40	; 64
 120:	e8 2f       	mov	r30, r24
 122:	f9 2f       	mov	r31, r25

00000124 <loopg>:
 124:	07 d0       	rcall	.+14     	; 0x134 <WritePix>
 126:	7a 95       	dec	r23
 128:	e9 f7       	brne	.-6      	; 0x124 <loopg>
 12a:	4f 91       	pop	r20
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	78 94       	sei
 132:	08 95       	ret

00000134 <WritePix>:
 134:	7f 93       	push	r23
 136:	13 e0       	ldi	r17, 0x03	; 3

00000138 <next_led>:
 138:	01 91       	ld	r16, Z+
 13a:	48 e0       	ldi	r20, 0x08	; 8

0000013c <nextbit>:
 13c:	75 b1       	in	r23, 0x05	; 5
 13e:	72 60       	ori	r23, 0x02	; 2
 140:	75 b9       	out	0x05, r23	; 5
 142:	00 1f       	adc	r16, r16
 144:	78 f0       	brcs	.+30     	; 0x164 <ES1>

00000146 <ES0>:
 146:	00 00       	nop
 148:	75 b1       	in	r23, 0x05	; 5
 14a:	7d 7f       	andi	r23, 0xFD	; 253
 14c:	75 b9       	out	0x05, r23	; 5
	...
 15e:	4a 95       	dec	r20
 160:	69 f7       	brne	.-38     	; 0x13c <nextbit>
 162:	10 c0       	rjmp	.+32     	; 0x184 <txend>

00000164 <ES1>:
	...
 174:	00 00       	nop
 176:	75 b1       	in	r23, 0x05	; 5
 178:	7d 7f       	andi	r23, 0xFD	; 253
 17a:	75 b9       	out	0x05, r23	; 5
 17c:	00 00       	nop
 17e:	4a 95       	dec	r20
 180:	e9 f6       	brne	.-70     	; 0x13c <nextbit>
	...

00000184 <txend>:
 184:	1a 95       	dec	r17
 186:	c1 f6       	brne	.-80     	; 0x138 <next_led>

00000188 <txdone>:
 188:	7f 91       	pop	r23
 18a:	08 95       	ret

0000018c <delay>:
 18c:	3f 93       	push	r19
 18e:	4f 93       	push	r20
 190:	5f 93       	push	r21
 192:	52 e3       	ldi	r21, 0x32	; 50
 194:	3f ef       	ldi	r19, 0xFF	; 255
 196:	4f ef       	ldi	r20, 0xFF	; 255

00000198 <reload>:
 198:	3a 95       	dec	r19
 19a:	f1 f7       	brne	.-4      	; 0x198 <reload>
 19c:	3f ef       	ldi	r19, 0xFF	; 255
 19e:	4a 95       	dec	r20
 1a0:	d9 f7       	brne	.-10     	; 0x198 <reload>
 1a2:	4f ef       	ldi	r20, 0xFF	; 255
 1a4:	5a 95       	dec	r21
 1a6:	c1 f7       	brne	.-16     	; 0x198 <reload>
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	08 95       	ret

000001b0 <adc_init>:
 1b0:	ea e7       	ldi	r30, 0x7A	; 122
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	87 60       	ori	r24, 0x07	; 7
 1b8:	80 83       	st	Z, r24
 1ba:	ac e7       	ldi	r26, 0x7C	; 124
 1bc:	b0 e0       	ldi	r27, 0x00	; 0
 1be:	8c 91       	ld	r24, X
 1c0:	80 64       	ori	r24, 0x40	; 64
 1c2:	8c 93       	st	X, r24
 1c4:	80 81       	ld	r24, Z
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	80 83       	st	Z, r24
 1ca:	80 81       	ld	r24, Z
 1cc:	80 64       	ori	r24, 0x40	; 64
 1ce:	80 83       	st	Z, r24
 1d0:	08 95       	ret

000001d2 <read_adc>:
 1d2:	ec e7       	ldi	r30, 0x7C	; 124
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	90 81       	ld	r25, Z
 1d8:	90 7f       	andi	r25, 0xF0	; 240
 1da:	90 83       	st	Z, r25
 1dc:	90 81       	ld	r25, Z
 1de:	89 2b       	or	r24, r25
 1e0:	80 83       	st	Z, r24
 1e2:	ea e7       	ldi	r30, 0x7A	; 122
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	80 64       	ori	r24, 0x40	; 64
 1ea:	80 83       	st	Z, r24
 1ec:	80 81       	ld	r24, Z
 1ee:	86 fd       	sbrc	r24, 6
 1f0:	fd cf       	rjmp	.-6      	; 0x1ec <read_adc+0x1a>
 1f2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1f6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 1fa:	08 95       	ret

000001fc <read_VRY>:
 1fc:	84 e0       	ldi	r24, 0x04	; 4
 1fe:	e9 cf       	rjmp	.-46     	; 0x1d2 <read_adc>
 200:	08 95       	ret

00000202 <read_VRX>:
 202:	85 e0       	ldi	r24, 0x05	; 5
 204:	e6 cf       	rjmp	.-52     	; 0x1d2 <read_adc>
 206:	08 95       	ret

00000208 <QueueInit>:
 208:	87 e2       	ldi	r24, 0x27	; 39
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <pin+0x1>
 210:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <pin>
 214:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 218:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
 21c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <news>
 220:	08 95       	ret

00000222 <PushQueue>:
 222:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <news>
 226:	94 31       	cpi	r25, 0x14	; 20
 228:	20 f0       	brcs	.+8      	; 0x232 <PushQueue+0x10>
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <news>
 230:	08 95       	ret
 232:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <pin>
 236:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <pin+0x1>
 23a:	9f 01       	movw	r18, r30
 23c:	2f 5f       	subi	r18, 0xFF	; 255
 23e:	3f 4f       	sbci	r19, 0xFF	; 255
 240:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <pin+0x1>
 244:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <pin>
 248:	80 83       	st	Z, r24
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	89 0f       	add	r24, r25
 24e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <news>
 252:	2b 53       	subi	r18, 0x3B	; 59
 254:	31 40       	sbci	r19, 0x01	; 1
 256:	31 f4       	brne	.+12     	; 0x264 <PushQueue+0x42>
 258:	27 e2       	ldi	r18, 0x27	; 39
 25a:	31 e0       	ldi	r19, 0x01	; 1
 25c:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <pin+0x1>
 260:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <pin>
 264:	08 95       	ret

00000266 <display_init>:
 266:	1c df       	rcall	.-456    	; 0xa0 <ss_Init>
 268:	81 e9       	ldi	r24, 0x91	; 145
 26a:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <Digit_values+0x2>
 26e:	08 95       	ret

00000270 <display_resfesh>:
 270:	cf 93       	push	r28
 272:	df 93       	push	r29
 274:	c8 2f       	mov	r28, r24
 276:	d0 e0       	ldi	r29, 0x00	; 0
 278:	fe 01       	movw	r30, r28
 27a:	e1 5c       	subi	r30, 0xC1	; 193
 27c:	fe 4f       	sbci	r31, 0xFE	; 254
 27e:	80 81       	ld	r24, Z
 280:	1c df       	rcall	.-456    	; 0xba <ss_SendByte>
 282:	ce 5f       	subi	r28, 0xFE	; 254
 284:	de 4f       	sbci	r29, 0xFE	; 254
 286:	88 81       	ld	r24, Y
 288:	18 df       	rcall	.-464    	; 0xba <ss_SendByte>
 28a:	2d df       	rcall	.-422    	; 0xe6 <ss_Wrt2Latch>
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <set_P1>:
 292:	af e3       	ldi	r26, 0x3F	; 63
 294:	b1 e0       	ldi	r27, 0x01	; 1
 296:	e6 e0       	ldi	r30, 0x06	; 6
 298:	f1 e0       	ldi	r31, 0x01	; 1
 29a:	80 81       	ld	r24, Z
 29c:	8c 93       	st	X, r24
 29e:	81 81       	ldd	r24, Z+1	; 0x01
 2a0:	11 96       	adiw	r26, 0x01	; 1
 2a2:	8c 93       	st	X, r24
 2a4:	11 97       	sbiw	r26, 0x01	; 1
 2a6:	e0 91 01 01 	lds	r30, 0x0101	; 0x800101 <Player1_Hits>
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	e6 5f       	subi	r30, 0xF6	; 246
 2ae:	fe 4f       	sbci	r31, 0xFE	; 254
 2b0:	80 81       	ld	r24, Z
 2b2:	13 96       	adiw	r26, 0x03	; 3
 2b4:	8c 93       	st	X, r24
 2b6:	08 95       	ret

000002b8 <set_P2>:
 2b8:	af e3       	ldi	r26, 0x3F	; 63
 2ba:	b1 e0       	ldi	r27, 0x01	; 1
 2bc:	e6 e0       	ldi	r30, 0x06	; 6
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	82 81       	ldd	r24, Z+2	; 0x02
 2c2:	8c 93       	st	X, r24
 2c4:	83 81       	ldd	r24, Z+3	; 0x03
 2c6:	11 96       	adiw	r26, 0x01	; 1
 2c8:	8c 93       	st	X, r24
 2ca:	11 97       	sbiw	r26, 0x01	; 1
 2cc:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	e6 5f       	subi	r30, 0xF6	; 246
 2d4:	fe 4f       	sbci	r31, 0xFE	; 254
 2d6:	80 81       	ld	r24, Z
 2d8:	13 96       	adiw	r26, 0x03	; 3
 2da:	8c 93       	st	X, r24
 2dc:	08 95       	ret

000002de <button_check>:



uint8_t button_check(void)
{
	ispressed = (PIND & (1<<6));
 2de:	89 b1       	in	r24, 0x09	; 9
 2e0:	80 74       	andi	r24, 0x40	; 64
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <ispressed+0x1>
 2e8:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <ispressed>
	return (ispressed);
 2ec:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <ispressed>
 2f0:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <ispressed+0x1>
}
 2f4:	08 95       	ret

000002f6 <Joystick>:

volatile int ijoy,jjoy;
volatile int ispressed;
void Joystick(void)
{
	if (button_check() == 0)
 2f6:	f3 df       	rcall	.-26     	; 0x2de <button_check>
 2f8:	88 23       	and	r24, r24
 2fa:	09 f4       	brne	.+2      	; 0x2fe <Joystick+0x8>
 2fc:	7a c0       	rjmp	.+244    	; 0x3f2 <Joystick+0xfc>
	{
		/*UART_putstring("Boton apretado \n");*/
	}
	else if ((read_VRX()  >= 700))
 2fe:	81 df       	rcall	.-254    	; 0x202 <read_VRX>
 300:	8c 3b       	cpi	r24, 0xBC	; 188
 302:	92 40       	sbci	r25, 0x02	; 2
 304:	b0 f0       	brcs	.+44     	; 0x332 <Joystick+0x3c>
 306:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
	{
		if (ijoy < 7)
 30a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 30e:	07 97       	sbiw	r24, 0x07	; 7
 310:	0c f0       	brlt	.+2      	; 0x314 <Joystick+0x1e>
 312:	6f c0       	rjmp	.+222    	; 0x3f2 <Joystick+0xfc>
 314:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
		{
			ijoy++; //se mueve 1 a la derecha
 318:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <ijoy+0x1>
 322:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <ijoy>
 326:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
			send_num(ijoy);
 32a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 32e:	48 c1       	rjmp	.+656    	; 0x5c0 <send_num>
 330:	08 95       	ret
		}
	}
	else if ((read_VRX()  ==  0) && (read_VRY()  >=  0) && (read_VRY()  <=  1023))
 332:	67 df       	rcall	.-306    	; 0x202 <read_VRX>
 334:	89 2b       	or	r24, r25
 336:	e1 f4       	brne	.+56     	; 0x370 <Joystick+0x7a>
 338:	61 df       	rcall	.-318    	; 0x1fc <read_VRY>
 33a:	60 df       	rcall	.-320    	; 0x1fc <read_VRY>
 33c:	81 15       	cp	r24, r1
 33e:	94 40       	sbci	r25, 0x04	; 4
 340:	b8 f4       	brcc	.+46     	; 0x370 <Joystick+0x7a>
 342:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
	{
		if (ijoy > 0)
 346:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 34a:	18 16       	cp	r1, r24
 34c:	19 06       	cpc	r1, r25
 34e:	0c f0       	brlt	.+2      	; 0x352 <Joystick+0x5c>
 350:	50 c0       	rjmp	.+160    	; 0x3f2 <Joystick+0xfc>
 352:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
		{
			ijoy--; //se mueve 1 a la izquierda
 356:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 35a:	01 97       	sbiw	r24, 0x01	; 1
 35c:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <ijoy+0x1>
 360:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <ijoy>
			send_num(ijoy);
 364:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
 368:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 36c:	29 c1       	rjmp	.+594    	; 0x5c0 <send_num>
		}
	}

	else if ((read_VRX()  >=  0) && (read_VRX()  <=  1023) && (read_VRY()  >=  0) && (read_VRY()  <=  200))
 36e:	08 95       	ret
 370:	48 df       	rcall	.-368    	; 0x202 <read_VRX>
 372:	47 df       	rcall	.-370    	; 0x202 <read_VRX>
 374:	81 15       	cp	r24, r1
 376:	94 40       	sbci	r25, 0x04	; 4
 378:	d0 f4       	brcc	.+52     	; 0x3ae <Joystick+0xb8>
 37a:	40 df       	rcall	.-384    	; 0x1fc <read_VRY>
 37c:	3f df       	rcall	.-386    	; 0x1fc <read_VRY>
 37e:	89 3c       	cpi	r24, 0xC9	; 201
 380:	91 05       	cpc	r25, r1
 382:	a8 f4       	brcc	.+42     	; 0x3ae <Joystick+0xb8>
 384:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
 388:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
	{
		if (jjoy < 7)
 38c:	07 97       	sbiw	r24, 0x07	; 7
 38e:	8c f5       	brge	.+98     	; 0x3f2 <Joystick+0xfc>
 390:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
 394:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
		{
			jjoy++; //se mueve 1 hacia arriba
 398:	01 96       	adiw	r24, 0x01	; 1
 39a:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <jjoy+0x1>
 39e:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <jjoy>
			send_num(jjoy);
 3a2:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
 3a6:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
 3aa:	0a c1       	rjmp	.+532    	; 0x5c0 <send_num>
		}
	}
	else if ((read_VRX()  >=  0) && (read_VRX()  <=  1023) && (read_VRY()  >=  700)&& (read_VRY()  <=  1023))
 3ac:	08 95       	ret
 3ae:	29 df       	rcall	.-430    	; 0x202 <read_VRX>
 3b0:	28 df       	rcall	.-432    	; 0x202 <read_VRX>
 3b2:	81 15       	cp	r24, r1
 3b4:	94 40       	sbci	r25, 0x04	; 4
 3b6:	e8 f4       	brcc	.+58     	; 0x3f2 <Joystick+0xfc>
 3b8:	21 df       	rcall	.-446    	; 0x1fc <read_VRY>
 3ba:	8c 3b       	cpi	r24, 0xBC	; 188
 3bc:	92 40       	sbci	r25, 0x02	; 2
 3be:	c8 f0       	brcs	.+50     	; 0x3f2 <Joystick+0xfc>
 3c0:	1d df       	rcall	.-454    	; 0x1fc <read_VRY>
 3c2:	81 15       	cp	r24, r1
 3c4:	94 40       	sbci	r25, 0x04	; 4
 3c6:	a8 f4       	brcc	.+42     	; 0x3f2 <Joystick+0xfc>
 3c8:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
 3cc:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
	{
		if (jjoy > 0)
 3d0:	18 16       	cp	r1, r24
 3d2:	19 06       	cpc	r1, r25
 3d4:	74 f4       	brge	.+28     	; 0x3f2 <Joystick+0xfc>
 3d6:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
		{
			jjoy--; //se mueve 1 hacia abajo
 3da:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
 3de:	01 97       	sbiw	r24, 0x01	; 1
 3e0:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <jjoy+0x1>
 3e4:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <jjoy>
 3e8:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <jjoy>
			send_num(jjoy);
 3ec:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <jjoy+0x1>
 3f0:	e7 c0       	rjmp	.+462    	; 0x5c0 <send_num>
 3f2:	08 95       	ret

000003f4 <init_RTI>:
 3f4:	82 e0       	ldi	r24, 0x02	; 2
 3f6:	84 bd       	out	0x24, r24	; 36
 3f8:	94 e0       	ldi	r25, 0x04	; 4
 3fa:	95 bd       	out	0x25, r25	; 37
 3fc:	9d e7       	ldi	r25, 0x7D	; 125
 3fe:	97 bd       	out	0x27, r25	; 39
 400:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 404:	08 95       	ret

00000406 <__vector_14>:
 406:	1f 92       	push	r1
 408:	0f 92       	push	r0
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	0f 92       	push	r0
 40e:	11 24       	eor	r1, r1
 410:	2f 93       	push	r18
 412:	3f 93       	push	r19
 414:	4f 93       	push	r20
 416:	5f 93       	push	r21
 418:	6f 93       	push	r22
 41a:	7f 93       	push	r23
 41c:	8f 93       	push	r24
 41e:	9f 93       	push	r25
 420:	af 93       	push	r26
 422:	bf 93       	push	r27
 424:	ef 93       	push	r30
 426:	ff 93       	push	r31
 428:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <digit_display>
 42c:	21 df       	rcall	.-446    	; 0x270 <display_resfesh>
 42e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <digit_display>
 432:	83 30       	cpi	r24, 0x03	; 3
 434:	20 f4       	brcc	.+8      	; 0x43e <__vector_14+0x38>
 436:	8f 5f       	subi	r24, 0xFF	; 255
 438:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <digit_display>
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__vector_14+0x3c>
 43e:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <digit_display>
 442:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <Joystick_CountTimer>
 446:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <Joystick_CountTimer+0x1>
 44a:	00 97       	sbiw	r24, 0x00	; 0
 44c:	31 f0       	breq	.+12     	; 0x45a <__vector_14+0x54>
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <Joystick_CountTimer+0x1>
 454:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <Joystick_CountTimer>
 458:	07 c0       	rjmp	.+14     	; 0x468 <__vector_14+0x62>
 45a:	82 e3       	ldi	r24, 0x32	; 50
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <Joystick_CountTimer+0x1>
 462:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <Joystick_CountTimer>
 466:	47 df       	rcall	.-370    	; 0x2f6 <Joystick>
 468:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <Joystickbutton_CountTimer>
 46c:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <Joystickbutton_CountTimer+0x1>
 470:	00 97       	sbiw	r24, 0x00	; 0
 472:	31 f0       	breq	.+12     	; 0x480 <__vector_14+0x7a>
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <Joystickbutton_CountTimer+0x1>
 47a:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Joystickbutton_CountTimer>
 47e:	24 c0       	rjmp	.+72     	; 0x4c8 <__vector_14+0xc2>
 480:	82 e3       	ldi	r24, 0x32	; 50
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <Joystickbutton_CountTimer+0x1>
 488:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Joystickbutton_CountTimer>
 48c:	28 df       	rcall	.-432    	; 0x2de <button_check>
 48e:	81 11       	cpse	r24, r1
 490:	1b c0       	rjmp	.+54     	; 0x4c8 <__vector_14+0xc2>
 492:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 496:	81 30       	cpi	r24, 0x01	; 1
 498:	51 f4       	brne	.+20     	; 0x4ae <__vector_14+0xa8>
 49a:	82 e0       	ldi	r24, 0x02	; 2
 49c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <Turno>
 4a0:	84 ef       	ldi	r24, 0xF4	; 244
 4a2:	91 e0       	ldi	r25, 0x01	; 1
 4a4:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <Joystickbutton_CountTimer+0x1>
 4a8:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Joystickbutton_CountTimer>
 4ac:	0d c0       	rjmp	.+26     	; 0x4c8 <__vector_14+0xc2>
 4ae:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 4b2:	82 30       	cpi	r24, 0x02	; 2
 4b4:	49 f4       	brne	.+18     	; 0x4c8 <__vector_14+0xc2>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <Turno>
 4bc:	84 ef       	ldi	r24, 0xF4	; 244
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <Joystickbutton_CountTimer+0x1>
 4c4:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Joystickbutton_CountTimer>
 4c8:	ff 91       	pop	r31
 4ca:	ef 91       	pop	r30
 4cc:	bf 91       	pop	r27
 4ce:	af 91       	pop	r26
 4d0:	9f 91       	pop	r25
 4d2:	8f 91       	pop	r24
 4d4:	7f 91       	pop	r23
 4d6:	6f 91       	pop	r22
 4d8:	5f 91       	pop	r21
 4da:	4f 91       	pop	r20
 4dc:	3f 91       	pop	r19
 4de:	2f 91       	pop	r18
 4e0:	0f 90       	pop	r0
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	0f 90       	pop	r0
 4e6:	1f 90       	pop	r1
 4e8:	18 95       	reti

000004ea <UART_Init>:
 4ea:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 4ee:	87 e6       	ldi	r24, 0x67	; 103
 4f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 4f4:	86 e0       	ldi	r24, 0x06	; 6
 4f6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 4fa:	e1 ec       	ldi	r30, 0xC1	; 193
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	88 e1       	ldi	r24, 0x18	; 24
 500:	80 83       	st	Z, r24
 502:	80 81       	ld	r24, Z
 504:	80 68       	ori	r24, 0x80	; 128
 506:	80 83       	st	Z, r24
 508:	7f de       	rcall	.-770    	; 0x208 <QueueInit>
 50a:	8f e9       	ldi	r24, 0x9F	; 159
 50c:	9f e0       	ldi	r25, 0x0F	; 15
 50e:	01 97       	sbiw	r24, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <UART_Init+0x24>
 512:	00 c0       	rjmp	.+0      	; 0x514 <UART_Init+0x2a>
 514:	00 00       	nop
 516:	08 95       	ret

00000518 <UART_TransmitPolling>:
 518:	e0 ec       	ldi	r30, 0xC0	; 192
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	90 81       	ld	r25, Z
 51e:	95 ff       	sbrs	r25, 5
 520:	fd cf       	rjmp	.-6      	; 0x51c <UART_TransmitPolling+0x4>
 522:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 526:	08 95       	ret

00000528 <UART_putstring>:
 528:	cf 93       	push	r28
 52a:	df 93       	push	r29
 52c:	ec 01       	movw	r28, r24
 52e:	88 81       	ld	r24, Y
 530:	88 23       	and	r24, r24
 532:	29 f0       	breq	.+10     	; 0x53e <UART_putstring+0x16>
 534:	21 96       	adiw	r28, 0x01	; 1
 536:	f0 df       	rcall	.-32     	; 0x518 <UART_TransmitPolling>
 538:	89 91       	ld	r24, Y+
 53a:	81 11       	cpse	r24, r1
 53c:	fc cf       	rjmp	.-8      	; 0x536 <UART_putstring+0xe>
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	08 95       	ret

00000544 <__vector_19>:
 544:	1f 92       	push	r1
 546:	0f 92       	push	r0
 548:	0f b6       	in	r0, 0x3f	; 63
 54a:	0f 92       	push	r0
 54c:	11 24       	eor	r1, r1
 54e:	8f 93       	push	r24
 550:	ef 93       	push	r30
 552:	ff 93       	push	r31
 554:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <USART_TransmitBuffer>
 558:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 55c:	e1 ec       	ldi	r30, 0xC1	; 193
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	80 81       	ld	r24, Z
 562:	8f 7d       	andi	r24, 0xDF	; 223
 564:	80 83       	st	Z, r24
 566:	ff 91       	pop	r31
 568:	ef 91       	pop	r30
 56a:	8f 91       	pop	r24
 56c:	0f 90       	pop	r0
 56e:	0f be       	out	0x3f, r0	; 63
 570:	0f 90       	pop	r0
 572:	1f 90       	pop	r1
 574:	18 95       	reti

00000576 <__vector_18>:
 576:	1f 92       	push	r1
 578:	0f 92       	push	r0
 57a:	0f b6       	in	r0, 0x3f	; 63
 57c:	0f 92       	push	r0
 57e:	11 24       	eor	r1, r1
 580:	2f 93       	push	r18
 582:	3f 93       	push	r19
 584:	4f 93       	push	r20
 586:	5f 93       	push	r21
 588:	6f 93       	push	r22
 58a:	7f 93       	push	r23
 58c:	8f 93       	push	r24
 58e:	9f 93       	push	r25
 590:	af 93       	push	r26
 592:	bf 93       	push	r27
 594:	ef 93       	push	r30
 596:	ff 93       	push	r31
 598:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 59c:	42 de       	rcall	.-892    	; 0x222 <PushQueue>
 59e:	ff 91       	pop	r31
 5a0:	ef 91       	pop	r30
 5a2:	bf 91       	pop	r27
 5a4:	af 91       	pop	r26
 5a6:	9f 91       	pop	r25
 5a8:	8f 91       	pop	r24
 5aa:	7f 91       	pop	r23
 5ac:	6f 91       	pop	r22
 5ae:	5f 91       	pop	r21
 5b0:	4f 91       	pop	r20
 5b2:	3f 91       	pop	r19
 5b4:	2f 91       	pop	r18
 5b6:	0f 90       	pop	r0
 5b8:	0f be       	out	0x3f, r0	; 63
 5ba:	0f 90       	pop	r0
 5bc:	1f 90       	pop	r1
 5be:	18 95       	reti

000005c0 <send_num>:
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 5c0:	4a e0       	ldi	r20, 0x0A	; 10
 5c2:	6a e4       	ldi	r22, 0x4A	; 74
 5c4:	71 e0       	ldi	r23, 0x01	; 1
 5c6:	3f d1       	rcall	.+638    	; 0x846 <__itoa_ncheck>
 5c8:	8a e4       	ldi	r24, 0x4A	; 74
 5ca:	91 e0       	ldi	r25, 0x01	; 1
 5cc:	ad cf       	rjmp	.-166    	; 0x528 <UART_putstring>
 5ce:	08 95       	ret

000005d0 <Mostrar_Matriz_2>:
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	e5 e1       	ldi	r30, 0x15	; 21
 5d6:	f2 e0       	ldi	r31, 0x02	; 2
 5d8:	67 ed       	ldi	r22, 0xD7	; 215
 5da:	72 e0       	ldi	r23, 0x02	; 2
 5dc:	c5 ed       	ldi	r28, 0xD5	; 213
 5de:	d2 e0       	ldi	r29, 0x02	; 2
 5e0:	0f c0       	rjmp	.+30     	; 0x600 <Mostrar_Matriz_2+0x30>
 5e2:	21 91       	ld	r18, Z+
 5e4:	31 91       	ld	r19, Z+
 5e6:	41 91       	ld	r20, Z+
 5e8:	2d 93       	st	X+, r18
 5ea:	3d 93       	st	X+, r19
 5ec:	4d 93       	st	X+, r20
 5ee:	e8 17       	cp	r30, r24
 5f0:	f9 07       	cpc	r31, r25
 5f2:	b9 f7       	brne	.-18     	; 0x5e2 <Mostrar_Matriz_2+0x12>
 5f4:	68 5e       	subi	r22, 0xE8	; 232
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	fc 01       	movw	r30, r24
 5fa:	c8 17       	cp	r28, r24
 5fc:	d9 07       	cpc	r29, r25
 5fe:	21 f0       	breq	.+8      	; 0x608 <Mostrar_Matriz_2+0x38>
 600:	cf 01       	movw	r24, r30
 602:	48 96       	adiw	r24, 0x18	; 24
 604:	db 01       	movw	r26, r22
 606:	ed cf       	rjmp	.-38     	; 0x5e2 <Mostrar_Matriz_2+0x12>
 608:	df 91       	pop	r29
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <Mostrar_Matriz_1>:
 60e:	cf 93       	push	r28
 610:	df 93       	push	r29
 612:	e5 e5       	ldi	r30, 0x55	; 85
 614:	f1 e0       	ldi	r31, 0x01	; 1
 616:	67 ed       	ldi	r22, 0xD7	; 215
 618:	72 e0       	ldi	r23, 0x02	; 2
 61a:	c5 e1       	ldi	r28, 0x15	; 21
 61c:	d2 e0       	ldi	r29, 0x02	; 2
 61e:	0f c0       	rjmp	.+30     	; 0x63e <Mostrar_Matriz_1+0x30>
 620:	21 91       	ld	r18, Z+
 622:	31 91       	ld	r19, Z+
 624:	41 91       	ld	r20, Z+
 626:	2d 93       	st	X+, r18
 628:	3d 93       	st	X+, r19
 62a:	4d 93       	st	X+, r20
 62c:	e8 17       	cp	r30, r24
 62e:	f9 07       	cpc	r31, r25
 630:	b9 f7       	brne	.-18     	; 0x620 <Mostrar_Matriz_1+0x12>
 632:	68 5e       	subi	r22, 0xE8	; 232
 634:	7f 4f       	sbci	r23, 0xFF	; 255
 636:	fc 01       	movw	r30, r24
 638:	c8 17       	cp	r28, r24
 63a:	d9 07       	cpc	r29, r25
 63c:	21 f0       	breq	.+8      	; 0x646 <Mostrar_Matriz_1+0x38>
 63e:	cf 01       	movw	r24, r30
 640:	48 96       	adiw	r24, 0x18	; 24
 642:	db 01       	movw	r26, r22
 644:	ed cf       	rjmp	.-38     	; 0x620 <Mostrar_Matriz_1+0x12>
 646:	df 91       	pop	r29
 648:	cf 91       	pop	r28
 64a:	08 95       	ret

0000064c <clear_disp>:
 64c:	f8 94       	cli
 64e:	e7 ed       	ldi	r30, 0xD7	; 215
 650:	f2 e0       	ldi	r31, 0x02	; 2
 652:	47 e9       	ldi	r20, 0x97	; 151
 654:	53 e0       	ldi	r21, 0x03	; 3
 656:	10 c0       	rjmp	.+32     	; 0x678 <clear_disp+0x2c>
 658:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <Apagado>
 65c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <Apagado+0x1>
 660:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <Apagado+0x2>
 664:	81 93       	st	Z+, r24
 666:	91 93       	st	Z+, r25
 668:	a1 93       	st	Z+, r26
 66a:	e2 17       	cp	r30, r18
 66c:	f3 07       	cpc	r31, r19
 66e:	a1 f7       	brne	.-24     	; 0x658 <clear_disp+0xc>
 670:	f9 01       	movw	r30, r18
 672:	42 17       	cp	r20, r18
 674:	53 07       	cpc	r21, r19
 676:	21 f0       	breq	.+8      	; 0x680 <clear_disp+0x34>
 678:	9f 01       	movw	r18, r30
 67a:	28 5e       	subi	r18, 0xE8	; 232
 67c:	3f 4f       	sbci	r19, 0xFF	; 255
 67e:	ec cf       	rjmp	.-40     	; 0x658 <clear_disp+0xc>
 680:	78 94       	sei
 682:	08 95       	ret

00000684 <main>:
 684:	3e dd       	rcall	.-1412   	; 0x102 <init_ws2812>
 686:	b6 de       	rcall	.-660    	; 0x3f4 <init_RTI>
 688:	30 df       	rcall	.-416    	; 0x4ea <UART_Init>
 68a:	92 dd       	rcall	.-1244   	; 0x1b0 <adc_init>
 68c:	31 dd       	rcall	.-1438   	; 0xf0 <joybutton_Init>
 68e:	eb dd       	rcall	.-1066   	; 0x266 <display_init>
 690:	87 ed       	ldi	r24, 0xD7	; 215
 692:	92 e0       	ldi	r25, 0x02	; 2
 694:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <p2disp+0x1>
 698:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <p2disp>
 69c:	fc 01       	movw	r30, r24
 69e:	27 e9       	ldi	r18, 0x97	; 151
 6a0:	33 e0       	ldi	r19, 0x03	; 3
 6a2:	10 c0       	rjmp	.+32     	; 0x6c4 <main+0x40>
 6a4:	c0 90 3c 01 	lds	r12, 0x013C	; 0x80013c <Apagado>
 6a8:	d0 90 3d 01 	lds	r13, 0x013D	; 0x80013d <Apagado+0x1>
 6ac:	e0 90 3e 01 	lds	r14, 0x013E	; 0x80013e <Apagado+0x2>
 6b0:	c1 92       	st	Z+, r12
 6b2:	d1 92       	st	Z+, r13
 6b4:	e1 92       	st	Z+, r14
 6b6:	8e 17       	cp	r24, r30
 6b8:	9f 07       	cpc	r25, r31
 6ba:	a1 f7       	brne	.-24     	; 0x6a4 <main+0x20>
 6bc:	fc 01       	movw	r30, r24
 6be:	82 17       	cp	r24, r18
 6c0:	93 07       	cpc	r25, r19
 6c2:	19 f0       	breq	.+6      	; 0x6ca <main+0x46>
 6c4:	cf 01       	movw	r24, r30
 6c6:	48 96       	adiw	r24, 0x18	; 24
 6c8:	ed cf       	rjmp	.-38     	; 0x6a4 <main+0x20>
 6ca:	8c e1       	ldi	r24, 0x1C	; 28
 6cc:	91 e0       	ldi	r25, 0x01	; 1
 6ce:	2c df       	rcall	.-424    	; 0x528 <UART_putstring>
 6d0:	e5 e5       	ldi	r30, 0x55	; 85
 6d2:	f1 e0       	ldi	r31, 0x01	; 1
 6d4:	25 e1       	ldi	r18, 0x15	; 21
 6d6:	32 e0       	ldi	r19, 0x02	; 2
 6d8:	15 c0       	rjmp	.+42     	; 0x704 <main+0x80>
 6da:	c0 90 3c 01 	lds	r12, 0x013C	; 0x80013c <Apagado>
 6de:	d0 90 3d 01 	lds	r13, 0x013D	; 0x80013d <Apagado+0x1>
 6e2:	e0 90 3e 01 	lds	r14, 0x013E	; 0x80013e <Apagado+0x2>
 6e6:	c1 92       	st	Z+, r12
 6e8:	d1 92       	st	Z+, r13
 6ea:	e1 92       	st	Z+, r14
 6ec:	e8 17       	cp	r30, r24
 6ee:	f9 07       	cpc	r31, r25
 6f0:	a1 f7       	brne	.-24     	; 0x6da <main+0x56>
 6f2:	fc 01       	movw	r30, r24
 6f4:	28 17       	cp	r18, r24
 6f6:	39 07       	cpc	r19, r25
 6f8:	29 f4       	brne	.+10     	; 0x704 <main+0x80>
 6fa:	e5 e1       	ldi	r30, 0x15	; 21
 6fc:	f2 e0       	ldi	r31, 0x02	; 2
 6fe:	25 ed       	ldi	r18, 0xD5	; 213
 700:	32 e0       	ldi	r19, 0x02	; 2
 702:	13 c0       	rjmp	.+38     	; 0x72a <main+0xa6>
 704:	cf 01       	movw	r24, r30
 706:	48 96       	adiw	r24, 0x18	; 24
 708:	e8 cf       	rjmp	.-48     	; 0x6da <main+0x56>
 70a:	c0 90 3c 01 	lds	r12, 0x013C	; 0x80013c <Apagado>
 70e:	d0 90 3d 01 	lds	r13, 0x013D	; 0x80013d <Apagado+0x1>
 712:	e0 90 3e 01 	lds	r14, 0x013E	; 0x80013e <Apagado+0x2>
 716:	c1 92       	st	Z+, r12
 718:	d1 92       	st	Z+, r13
 71a:	e1 92       	st	Z+, r14
 71c:	e8 17       	cp	r30, r24
 71e:	f9 07       	cpc	r31, r25
 720:	a1 f7       	brne	.-24     	; 0x70a <main+0x86>
 722:	fc 01       	movw	r30, r24
 724:	82 17       	cp	r24, r18
 726:	93 07       	cpc	r25, r19
 728:	19 f0       	breq	.+6      	; 0x730 <main+0xac>
 72a:	cf 01       	movw	r24, r30
 72c:	48 96       	adiw	r24, 0x18	; 24
 72e:	ed cf       	rjmp	.-38     	; 0x70a <main+0x86>
 730:	8d df       	rcall	.-230    	; 0x64c <clear_disp>
 732:	78 94       	sei
 734:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 738:	81 30       	cpi	r24, 0x01	; 1
 73a:	09 f0       	breq	.+2      	; 0x73e <main+0xba>
 73c:	3f c0       	rjmp	.+126    	; 0x7bc <main+0x138>
 73e:	a9 dd       	rcall	.-1198   	; 0x292 <set_P1>
 740:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 744:	81 30       	cpi	r24, 0x01	; 1
 746:	b1 f7       	brne	.-20     	; 0x734 <main+0xb0>
 748:	81 df       	rcall	.-254    	; 0x64c <clear_disp>
 74a:	42 df       	rcall	.-380    	; 0x5d0 <Mostrar_Matriz_2>
 74c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
 750:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 754:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <jjoy>
 758:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <jjoy+0x1>
 75c:	9f 01       	movw	r18, r30
 75e:	22 0f       	add	r18, r18
 760:	33 1f       	adc	r19, r19
 762:	e2 0f       	add	r30, r18
 764:	f3 1f       	adc	r31, r19
 766:	9c 01       	movw	r18, r24
 768:	22 0f       	add	r18, r18
 76a:	33 1f       	adc	r19, r19
 76c:	82 0f       	add	r24, r18
 76e:	93 1f       	adc	r25, r19
 770:	88 0f       	add	r24, r24
 772:	99 1f       	adc	r25, r25
 774:	88 0f       	add	r24, r24
 776:	99 1f       	adc	r25, r25
 778:	88 0f       	add	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	e8 0f       	add	r30, r24
 77e:	f9 1f       	adc	r31, r25
 780:	e9 52       	subi	r30, 0x29	; 41
 782:	fd 4f       	sbci	r31, 0xFD	; 253
 784:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <puntero>
 788:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <puntero+0x1>
 78c:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <puntero+0x2>
 790:	80 83       	st	Z, r24
 792:	91 83       	std	Z+1, r25	; 0x01
 794:	a2 83       	std	Z+2, r26	; 0x02
 796:	2f ef       	ldi	r18, 0xFF	; 255
 798:	80 e7       	ldi	r24, 0x70	; 112
 79a:	92 e0       	ldi	r25, 0x02	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 79c:	21 50       	subi	r18, 0x01	; 1
 79e:	80 40       	sbci	r24, 0x00	; 0
 7a0:	90 40       	sbci	r25, 0x00	; 0
 7a2:	e1 f7       	brne	.-8      	; 0x79c <main+0x118>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <main+0x122>
 7a6:	00 00       	nop
 7a8:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <p2disp>
 7ac:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <p2disp+0x1>
 7b0:	b2 dc       	rcall	.-1692   	; 0x116 <wrt_ws2812>
 7b2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 7b6:	81 30       	cpi	r24, 0x01	; 1
 7b8:	39 f2       	breq	.-114    	; 0x748 <main+0xc4>
 7ba:	bc cf       	rjmp	.-136    	; 0x734 <main+0xb0>
 7bc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 7c0:	82 30       	cpi	r24, 0x02	; 2
 7c2:	09 f0       	breq	.+2      	; 0x7c6 <main+0x142>
 7c4:	b7 cf       	rjmp	.-146    	; 0x734 <main+0xb0>
 7c6:	78 dd       	rcall	.-1296   	; 0x2b8 <set_P2>
 7c8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 7cc:	82 30       	cpi	r24, 0x02	; 2
 7ce:	09 f0       	breq	.+2      	; 0x7d2 <main+0x14e>
 7d0:	b1 cf       	rjmp	.-158    	; 0x734 <main+0xb0>
 7d2:	3c df       	rcall	.-392    	; 0x64c <clear_disp>
 7d4:	1c df       	rcall	.-456    	; 0x60e <Mostrar_Matriz_1>
 7d6:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <ijoy>
 7da:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <ijoy+0x1>
 7de:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <jjoy>
 7e2:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <jjoy+0x1>
 7e6:	9f 01       	movw	r18, r30
 7e8:	22 0f       	add	r18, r18
 7ea:	33 1f       	adc	r19, r19
 7ec:	e2 0f       	add	r30, r18
 7ee:	f3 1f       	adc	r31, r19
 7f0:	9c 01       	movw	r18, r24
 7f2:	22 0f       	add	r18, r18
 7f4:	33 1f       	adc	r19, r19
 7f6:	82 0f       	add	r24, r18
 7f8:	93 1f       	adc	r25, r19
 7fa:	88 0f       	add	r24, r24
 7fc:	99 1f       	adc	r25, r25
 7fe:	88 0f       	add	r24, r24
 800:	99 1f       	adc	r25, r25
 802:	88 0f       	add	r24, r24
 804:	99 1f       	adc	r25, r25
 806:	e8 0f       	add	r30, r24
 808:	f9 1f       	adc	r31, r25
 80a:	e9 52       	subi	r30, 0x29	; 41
 80c:	fd 4f       	sbci	r31, 0xFD	; 253
 80e:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <puntero>
 812:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <puntero+0x1>
 816:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <puntero+0x2>
 81a:	80 83       	st	Z, r24
 81c:	91 83       	std	Z+1, r25	; 0x01
 81e:	a2 83       	std	Z+2, r26	; 0x02
 820:	2f ef       	ldi	r18, 0xFF	; 255
 822:	80 e7       	ldi	r24, 0x70	; 112
 824:	92 e0       	ldi	r25, 0x02	; 2
 826:	21 50       	subi	r18, 0x01	; 1
 828:	80 40       	sbci	r24, 0x00	; 0
 82a:	90 40       	sbci	r25, 0x00	; 0
 82c:	e1 f7       	brne	.-8      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 82e:	00 c0       	rjmp	.+0      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 830:	00 00       	nop
 832:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <p2disp>
 836:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <p2disp+0x1>
 83a:	6d dc       	rcall	.-1830   	; 0x116 <wrt_ws2812>
 83c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Turno>
 840:	82 30       	cpi	r24, 0x02	; 2
 842:	39 f2       	breq	.-114    	; 0x7d2 <main+0x14e>
 844:	77 cf       	rjmp	.-274    	; 0x734 <main+0xb0>

00000846 <__itoa_ncheck>:
 846:	bb 27       	eor	r27, r27
 848:	4a 30       	cpi	r20, 0x0A	; 10
 84a:	31 f4       	brne	.+12     	; 0x858 <__itoa_ncheck+0x12>
 84c:	99 23       	and	r25, r25
 84e:	22 f4       	brpl	.+8      	; 0x858 <__itoa_ncheck+0x12>
 850:	bd e2       	ldi	r27, 0x2D	; 45
 852:	90 95       	com	r25
 854:	81 95       	neg	r24
 856:	9f 4f       	sbci	r25, 0xFF	; 255
 858:	01 c0       	rjmp	.+2      	; 0x85c <__utoa_common>

0000085a <__utoa_ncheck>:
 85a:	bb 27       	eor	r27, r27

0000085c <__utoa_common>:
 85c:	fb 01       	movw	r30, r22
 85e:	55 27       	eor	r21, r21
 860:	aa 27       	eor	r26, r26
 862:	88 0f       	add	r24, r24
 864:	99 1f       	adc	r25, r25
 866:	aa 1f       	adc	r26, r26
 868:	a4 17       	cp	r26, r20
 86a:	10 f0       	brcs	.+4      	; 0x870 <__utoa_common+0x14>
 86c:	a4 1b       	sub	r26, r20
 86e:	83 95       	inc	r24
 870:	50 51       	subi	r21, 0x10	; 16
 872:	b9 f7       	brne	.-18     	; 0x862 <__utoa_common+0x6>
 874:	a0 5d       	subi	r26, 0xD0	; 208
 876:	aa 33       	cpi	r26, 0x3A	; 58
 878:	08 f0       	brcs	.+2      	; 0x87c <__utoa_common+0x20>
 87a:	a9 5d       	subi	r26, 0xD9	; 217
 87c:	a1 93       	st	Z+, r26
 87e:	00 97       	sbiw	r24, 0x00	; 0
 880:	79 f7       	brne	.-34     	; 0x860 <__utoa_common+0x4>
 882:	b1 11       	cpse	r27, r1
 884:	b1 93       	st	Z+, r27
 886:	11 92       	st	Z+, r1
 888:	cb 01       	movw	r24, r22
 88a:	00 c0       	rjmp	.+0      	; 0x88c <strrev>

0000088c <strrev>:
 88c:	dc 01       	movw	r26, r24
 88e:	fc 01       	movw	r30, r24
 890:	67 2f       	mov	r22, r23
 892:	71 91       	ld	r23, Z+
 894:	77 23       	and	r23, r23
 896:	e1 f7       	brne	.-8      	; 0x890 <strrev+0x4>
 898:	32 97       	sbiw	r30, 0x02	; 2
 89a:	04 c0       	rjmp	.+8      	; 0x8a4 <strrev+0x18>
 89c:	7c 91       	ld	r23, X
 89e:	6d 93       	st	X+, r22
 8a0:	70 83       	st	Z, r23
 8a2:	62 91       	ld	r22, -Z
 8a4:	ae 17       	cp	r26, r30
 8a6:	bf 07       	cpc	r27, r31
 8a8:	c8 f3       	brcs	.-14     	; 0x89c <strrev+0x10>
 8aa:	08 95       	ret

000008ac <_exit>:
 8ac:	f8 94       	cli

000008ae <__stop_program>:
 8ae:	ff cf       	rjmp	.-2      	; 0x8ae <__stop_program>
